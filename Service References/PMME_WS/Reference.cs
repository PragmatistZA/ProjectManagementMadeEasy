//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ProjectManagementMadeEasyApp.PMME_WS {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="urn:pmmeWS", ConfigurationName="PMME_WS.pmmeWSPortType")]
    public interface pmmeWSPortType {
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:pmmeWS#getAllUsers", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string getAllUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:pmmeWS#getAllUsers", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> getAllUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:pmmeWS#getAllTeams", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string getAllTeams();
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:pmmeWS#getAllTeams", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> getAllTeamsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:pmmeWS#getAllProjects", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string getAllProjects();
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:pmmeWS#getAllProjects", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> getAllProjectsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:pmmeWS#getAllTasks", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string getAllTasks();
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:pmmeWS#getAllTasks", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> getAllTasksAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:pmmeWS#getData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string getData(string category);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:pmmeWS#getData", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> getDataAsync(string category);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:pmmeWS#loginUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string loginUser(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:pmmeWS#loginUser", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> loginUserAsync(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:pmmeWS#verifyUserLogin", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string verifyUserLogin(string email, string user_password);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:pmmeWS#verifyUserLogin", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> verifyUserLoginAsync(string email, string user_password);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:pmmeWS#addNewUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string addNewUser(string firstname, string lastname, string email, string user_password);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:pmmeWS#addNewUser", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> addNewUserAsync(string firstname, string lastname, string email, string user_password);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:pmmeWS#editUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string editUser(string user_id, string title, string first_name, string last_name, string job_desc, string email, string contact, string user_password);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:pmmeWS#editUser", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> editUserAsync(string user_id, string title, string first_name, string last_name, string job_desc, string email, string contact, string user_password);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:pmmeWS#userAddNewTeam", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string userAddNewTeam(string email, string team_name);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:pmmeWS#userAddNewTeam", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> userAddNewTeamAsync(string email, string team_name);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:pmmeWS#addUserToTeam", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string addUserToTeam(string email, string team_name);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:pmmeWS#addUserToTeam", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> addUserToTeamAsync(string email, string team_name);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:pmmeWS#getUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string getUser(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:pmmeWS#getUser", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> getUserAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:pmmeWS#getTeamProjects", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string getTeamProjects(string team_name);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:pmmeWS#getTeamProjects", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> getTeamProjectsAsync(string team_name);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:pmmeWS#getProjectTasks", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string getProjectTasks(string proj_name);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:pmmeWS#getProjectTasks", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> getProjectTasksAsync(string proj_name);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:pmmeWS#getListOfTeams", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string getListOfTeams();
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:pmmeWS#getListOfTeams", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> getListOfTeamsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:pmmeWS#getTeam", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string getTeam(string team_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:pmmeWS#getTeam", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> getTeamAsync(string team_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:pmmeWS#getTeamMembers", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string getTeamMembers(string team_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:pmmeWS#getTeamMembers", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> getTeamMembersAsync(string team_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:pmmeWS#addTask", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string addTask(string projid, string taskdesc, string timereq, string taskcreated, string taskdue);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:pmmeWS#addTask", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> addTaskAsync(string projid, string taskdesc, string timereq, string taskcreated, string taskdue);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:pmmeWS#addNewProject", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string addNewProject(string proj_manager_ID, string team_id, string proj_desc, string proj_name);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:pmmeWS#addNewProject", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> addNewProjectAsync(string proj_manager_ID, string team_id, string proj_desc, string proj_name);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:pmmeWS#deleteTask", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string deleteTask(string taskid);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:pmmeWS#deleteTask", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> deleteTaskAsync(string taskid);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:pmmeWS#joinTeam", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string joinTeam(string userid, string teamid);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:pmmeWS#joinTeam", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> joinTeamAsync(string userid, string teamid);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface pmmeWSPortTypeChannel : ProjectManagementMadeEasyApp.PMME_WS.pmmeWSPortType, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class pmmeWSPortTypeClient : System.ServiceModel.ClientBase<ProjectManagementMadeEasyApp.PMME_WS.pmmeWSPortType>, ProjectManagementMadeEasyApp.PMME_WS.pmmeWSPortType {
        
        public pmmeWSPortTypeClient() {
        }
        
        public pmmeWSPortTypeClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public pmmeWSPortTypeClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public pmmeWSPortTypeClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public pmmeWSPortTypeClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string getAllUsers() {
            return base.Channel.getAllUsers();
        }
        
        public System.Threading.Tasks.Task<string> getAllUsersAsync() {
            return base.Channel.getAllUsersAsync();
        }
        
        public string getAllTeams() {
            return base.Channel.getAllTeams();
        }
        
        public System.Threading.Tasks.Task<string> getAllTeamsAsync() {
            return base.Channel.getAllTeamsAsync();
        }
        
        public string getAllProjects() {
            return base.Channel.getAllProjects();
        }
        
        public System.Threading.Tasks.Task<string> getAllProjectsAsync() {
            return base.Channel.getAllProjectsAsync();
        }
        
        public string getAllTasks() {
            return base.Channel.getAllTasks();
        }
        
        public System.Threading.Tasks.Task<string> getAllTasksAsync() {
            return base.Channel.getAllTasksAsync();
        }
        
        public string getData(string category) {
            return base.Channel.getData(category);
        }
        
        public System.Threading.Tasks.Task<string> getDataAsync(string category) {
            return base.Channel.getDataAsync(category);
        }
        
        public string loginUser(string email, string password) {
            return base.Channel.loginUser(email, password);
        }
        
        public System.Threading.Tasks.Task<string> loginUserAsync(string email, string password) {
            return base.Channel.loginUserAsync(email, password);
        }
        
        public string verifyUserLogin(string email, string user_password) {
            return base.Channel.verifyUserLogin(email, user_password);
        }
        
        public System.Threading.Tasks.Task<string> verifyUserLoginAsync(string email, string user_password) {
            return base.Channel.verifyUserLoginAsync(email, user_password);
        }
        
        public string addNewUser(string firstname, string lastname, string email, string user_password) {
            return base.Channel.addNewUser(firstname, lastname, email, user_password);
        }
        
        public System.Threading.Tasks.Task<string> addNewUserAsync(string firstname, string lastname, string email, string user_password) {
            return base.Channel.addNewUserAsync(firstname, lastname, email, user_password);
        }
        
        public string editUser(string user_id, string title, string first_name, string last_name, string job_desc, string email, string contact, string user_password) {
            return base.Channel.editUser(user_id, title, first_name, last_name, job_desc, email, contact, user_password);
        }
        
        public System.Threading.Tasks.Task<string> editUserAsync(string user_id, string title, string first_name, string last_name, string job_desc, string email, string contact, string user_password) {
            return base.Channel.editUserAsync(user_id, title, first_name, last_name, job_desc, email, contact, user_password);
        }
        
        public string userAddNewTeam(string email, string team_name) {
            return base.Channel.userAddNewTeam(email, team_name);
        }
        
        public System.Threading.Tasks.Task<string> userAddNewTeamAsync(string email, string team_name) {
            return base.Channel.userAddNewTeamAsync(email, team_name);
        }
        
        public string addUserToTeam(string email, string team_name) {
            return base.Channel.addUserToTeam(email, team_name);
        }
        
        public System.Threading.Tasks.Task<string> addUserToTeamAsync(string email, string team_name) {
            return base.Channel.addUserToTeamAsync(email, team_name);
        }
        
        public string getUser(string email) {
            return base.Channel.getUser(email);
        }
        
        public System.Threading.Tasks.Task<string> getUserAsync(string email) {
            return base.Channel.getUserAsync(email);
        }
        
        public string getTeamProjects(string team_name) {
            return base.Channel.getTeamProjects(team_name);
        }
        
        public System.Threading.Tasks.Task<string> getTeamProjectsAsync(string team_name) {
            return base.Channel.getTeamProjectsAsync(team_name);
        }
        
        public string getProjectTasks(string proj_name) {
            return base.Channel.getProjectTasks(proj_name);
        }
        
        public System.Threading.Tasks.Task<string> getProjectTasksAsync(string proj_name) {
            return base.Channel.getProjectTasksAsync(proj_name);
        }
        
        public string getListOfTeams() {
            return base.Channel.getListOfTeams();
        }
        
        public System.Threading.Tasks.Task<string> getListOfTeamsAsync() {
            return base.Channel.getListOfTeamsAsync();
        }
        
        public string getTeam(string team_id) {
            return base.Channel.getTeam(team_id);
        }
        
        public System.Threading.Tasks.Task<string> getTeamAsync(string team_id) {
            return base.Channel.getTeamAsync(team_id);
        }
        
        public string getTeamMembers(string team_id) {
            return base.Channel.getTeamMembers(team_id);
        }
        
        public System.Threading.Tasks.Task<string> getTeamMembersAsync(string team_id) {
            return base.Channel.getTeamMembersAsync(team_id);
        }
        
        public string addTask(string projid, string taskdesc, string timereq, string taskcreated, string taskdue) {
            return base.Channel.addTask(projid, taskdesc, timereq, taskcreated, taskdue);
        }
        
        public System.Threading.Tasks.Task<string> addTaskAsync(string projid, string taskdesc, string timereq, string taskcreated, string taskdue) {
            return base.Channel.addTaskAsync(projid, taskdesc, timereq, taskcreated, taskdue);
        }
        
        public string addNewProject(string proj_manager_ID, string team_id, string proj_desc, string proj_name) {
            return base.Channel.addNewProject(proj_manager_ID, team_id, proj_desc, proj_name);
        }
        
        public System.Threading.Tasks.Task<string> addNewProjectAsync(string proj_manager_ID, string team_id, string proj_desc, string proj_name) {
            return base.Channel.addNewProjectAsync(proj_manager_ID, team_id, proj_desc, proj_name);
        }
        
        public string deleteTask(string taskid) {
            return base.Channel.deleteTask(taskid);
        }
        
        public System.Threading.Tasks.Task<string> deleteTaskAsync(string taskid) {
            return base.Channel.deleteTaskAsync(taskid);
        }
        
        public string joinTeam(string userid, string teamid) {
            return base.Channel.joinTeam(userid, teamid);
        }
        
        public System.Threading.Tasks.Task<string> joinTeamAsync(string userid, string teamid) {
            return base.Channel.joinTeamAsync(userid, teamid);
        }
    }
}
